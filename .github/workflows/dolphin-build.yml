name: Windows Dolphin Builder

on:
  workflow_dispatch: # Allows manual dispatch of the workflow

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true # Ensures submodules are checked out
          fetch-depth: 0 # Ensures the full repository is checked out

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v2
        with:
          nuget-version: latest

      - name: Verify SDL-UWP.vcxproj file exists
        shell: pwsh
        run: |
          Write-Output "Verifying SDL-UWP.vcxproj file..."
          if (-Not (Test-Path "Externals/SDL/SDL/VisualC-WinRT/SDL-UWP.vcxproj")) {
            Write-Error "SDL-UWP.vcxproj not found!"
            exit 1
          }
          Write-Output "SDL-UWP.vcxproj found."
          Get-Location
          Get-ChildItem "Externals/SDL/SDL/VisualC-WinRT"

      - name: Update Platform Toolset for SDL-UWP
        shell: pwsh
        run: |
          Write-Output "Updating Platform Toolset for SDL-UWP..."
          $projectPath = "Externals/SDL/SDL/VisualC-WinRT/SDL-UWP.vcxproj"
          $content = Get-Content $projectPath
          $newContent = $content -replace 'v142', 'v143'
          $newContent | Set-Content $projectPath
          Write-Output "Platform Toolset updated to v143."

      - name: Verify and Update Solution Configuration
        shell: pwsh
        run: |
          Write-Output "Verifying solution configuration..."
          $solutionPath = "Source/dolphin-emu.sln"
          if (-Not (Test-Path $solutionPath)) {
            Write-Error "Solution file not found!"
            exit 1
          }
          $solutionContent = Get-Content $solutionPath
          $projectGUID = "{89E9B32E-A86A-47C3-A948-D2B1622925CE}"
          $configSection = @"
          $projectGUID.Release|x64.ActiveCfg = Release|x64
          $projectGUID.Release|x64.Build.0 = Release|x64
          "@
          if ($solutionContent -notcontains $configSection) {
            Write-Output "Adding SDL-UWP project configuration to the solution..."
            $newSolutionContent = $solutionContent -replace '(GlobalSection\(ProjectConfigurationPlatforms\) = postSolution)', "`$1`n$configSection"
            $newSolutionContent | Set-Content $solutionPath
            Write-Output "SDL-UWP project configuration added."
          } else {
            Write-Output "SDL-UWP project configuration already present."
          }

      - name: Print Solution Configuration
        shell: pwsh
        run: |
          Write-Output "Printing solution configuration..."
          $solutionPath = "Source/dolphin-emu.sln"
          $solutionContent = Get-Content $solutionPath
          Write-Output $solutionContent

      - name: Build and Package Dolphin UWP Project
        shell: cmd
        run: |
          echo Building and packaging the Dolphin UWP project...
          cd Source
          echo Current directory: %cd%
          msbuild dolphin-emu.sln /p:Configuration=Release /p:Platform=x64 /t:Restore,Build /p:RestorePackagesConfig=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateKeyFile="DolphinWinRT_TemporaryKey.pfx" /p:DeployOnBuild=true /p:DeployTargetDevice=RemoteMachine /p:RemoteDebugMachine="XBOX"
          echo Build and packaging completed.

      - name: Explicitly Build SDL-UWP Project
        shell: cmd
        run: |
          echo Explicitly building SDL-UWP project...
          cd Source
          msbuild Externals/SDL/SDL/VisualC-WinRT/SDL-UWP.vcxproj /p:Configuration=Release /p:Platform=x64
          echo SDL-UWP project build completed.

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Dolphin-UWP-Build
          path: Source/bin/Release
